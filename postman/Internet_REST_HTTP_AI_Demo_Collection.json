{
	"info": {
		"_postman_id": "f8b0e6c4-2d3a-4c5b-9d1e-8f7a6b5c4d3e",
		"name": "Internet REST HTTP AI Demo",
		"description": "Collection for the Spring Boot REST API with AI integration demo",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "12345678"
	},
	"item": [
		{
			"name": "Authentication",
			"item": [
				{
					"name": "Register User",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"testuser\",\n    \"password\": \"password123\",\n    \"name\": \"Test User\",\n    \"email\": \"testuser@example.com\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/auth/register",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"auth",
								"register"
							]
						},
						"description": "Register a new user"
					},
					"response": []
				},
				{
					"name": "Login User",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"if (jsonData && jsonData.data && jsonData.data.token) {",
									"    pm.environment.set(\"authToken\", jsonData.data.token);",
									"    pm.environment.set(\"username\", jsonData.data.username);",
									"    console.log(\"Token saved to environment\");",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"{{username}}\",\n    \"password\": \"{{password}}\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/auth/login",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"auth",
								"login"
							]
						},
						"description": "Login and get access token (automatically saved to environment variables)"
					},
					"response": []
				},
				{
					"name": "Validate Token",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/auth/validate",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"auth",
								"validate"
							]
						},
						"description": "Validate the current auth token"
					},
					"response": []
				}
			],
			"description": "Authentication related endpoints"
		},
		{
			"name": "Products",
			"item": [
				{
					"name": "Get All Products",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/products",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"products"
							]
						},
						"description": "Get all products"
					},
					"response": []
				},
				{
					"name": "Get Product by ID",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/products/1",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"products",
								"1"
							]
						},
						"description": "Get a specific product by ID"
					},
					"response": []
				},
				{
					"name": "Search Products",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/products/search?name=laptop",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"products",
								"search"
							],
							"query": [
								{
									"key": "name",
									"value": "laptop"
								}
							]
						},
						"description": "Search products by name"
					},
					"response": []
				},
				{
					"name": "Create Product",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Laptop Pro\",\n    \"description\": \"High-performance laptop for developers\",\n    \"price\": 1499.99,\n    \"stock\": 50,\n    \"imageUrl\": \"https://example.com/laptop.jpg\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/products",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"products"
							]
						},
						"description": "Create a new product"
					},
					"response": []
				},
				{
					"name": "Update Product",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Updated Laptop Pro\",\n    \"description\": \"Updated high-performance laptop for developers\",\n    \"price\": 1599.99,\n    \"stock\": 45,\n    \"imageUrl\": \"https://example.com/updated-laptop.jpg\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/products/1",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"products",
								"1"
							]
						},
						"description": "Update a product by ID (full update)"
					},
					"response": []
				},
				{
					"name": "Patch Product",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"price\": 1399.99,\n    \"stock\": 60\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/products/1",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"products",
								"1"
							]
						},
						"description": "Partially update a product by ID"
					},
					"response": []
				},
				{
					"name": "Delete Product",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/products/1",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"products",
								"1"
							]
						},
						"description": "Delete a product by ID"
					},
					"response": []
				}
			],
			"description": "Product management endpoints"
		},
		{
			"name": "AI Integration",
			"item": [
				{
					"name": "Generate Content (Public)",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"prompt\": \"Tell me a fun fact about artificial intelligence.\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/ai/generate",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"ai",
								"generate"
							]
						},
						"description": "Generate AI content (public endpoint)"
					},
					"response": []
				},
				{
					"name": "Generate Content (Secured)",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"prompt\": \"Tell me about the latest advancements in artificial intelligence.\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/ai/generate-secure",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"ai",
								"generate-secure"
							]
						},
						"description": "Generate AI content (secured endpoint, requires authentication)"
					},
					"response": []
				}
			],
			"description": "AI integration endpoints"
		},
		{
			"name": "Users",
			"item": [
				{
					"name": "Get All Users",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/users",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users"
							]
						},
						"description": "Get all users (administrative endpoint)"
					},
					"response": []
				},
				{
					"name": "Get User by ID",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/users/1",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users",
								"1"
							]
						},
						"description": "Get a specific user by ID"
					},
					"response": []
				},
				{
					"name": "Get User by Username",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/users/username/testuser",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users",
								"username",
								"testuser"
							]
						},
						"description": "Get a specific user by username"
					},
					"response": []
				},
				{
					"name": "Delete User",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/users/1",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users",
								"1"
							]
						},
						"description": "Delete a user by ID"
					},
					"response": []
				}
			],
			"description": "User management endpoints (typically admin operations)"
		},
		{
			"name": "Basic Hello World",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/hello?name=Postman",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"hello"
					],
					"query": [
						{
							"key": "name",
							"value": "Postman"
						}
					]
				},
				"description": "Simple hello world endpoint from the main application class"
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "http://localhost:8080/api",
			"type": "string"
		}
	]
}
